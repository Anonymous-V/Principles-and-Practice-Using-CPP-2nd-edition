/*
 * Описание задачи:
 * ================
 * Напишите программу, вычисляющую начальный отрезок последовательности Фибоначчи,
 * т.е. последовательности, начинающейся с чисел 1 1 2 3 5 8 13 21 34. Каждое
 * число в этой последовательности равно сумме двух предыдущих. Найдите наибольшее
 * число Фиббоначи, которое можно записать в переменную типа int.
 *
 * Идея реализации:
 * ================
 * В описание уже есть алгоритм нахождения чисел Фибоначчи (сумма двух
 * предшествующих чисел в векторе). Для этого первые два значения необходимо
 * ввести в коде.
 *
 * Т.к. необходимо вычислить максимальное значение, которое поместится в тип int,
 * то вычисление последовательносит производится через чикл while.
 * */

#include "../../std_lib_facilities.h"

int main() {
    vector <int> fib;
    // Константа для вывода части последовательности Фибоначчи
    constexpr int MAX_VAL = 9;
    int val = 1, i = 2;

    fib.push_back(1);
    fib.push_back(1);
    val = fib[0] + fib[1];

    while (val > 0) {
        fib.push_back(val);
        ++i;
        val = fib[i - 2] + fib[i - 1];
    }

    cout << "The initial segment of the Fibonacci sequence:" << endl;
    // Вывод первых значений последовательности Фиббоначи
    for (int i = 0; i < MAX_VAL; ++i)
        cout << fib[i] << " ";
    cout << "..." << endl;

    cout << "Max value for the 'int' type: " << fib[fib.size() - 1] << endl;

    return 0;
}