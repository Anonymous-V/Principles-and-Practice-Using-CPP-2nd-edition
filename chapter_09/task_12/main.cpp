/*
 * Описание задачи:
 * ================
 * Измените представление класса Date на хранение количества дней, прошедших с
 * 1 января 1970 года (так называемый нулевой день), в переменной типа long int,
 * и соответствующим образом переработайте функции из раздела 9.8. Предусмотрите
 * отбрасывание всех дат, которые находятся за представленными данным образом
 * пределами (например, смело отбрасывайте все даты, предшествующие нулевому дню,
 * т.е. не допускайте отрицательных дней).
 *
 * Идея реализации:
 * ================
 * В класс добавлен новый член-данные zero_days, который имеет количество
 * дней от нулевого дня (01.01.1970). При создании дата автоматически переводится
 * в дни. Также пришлось переделать функцию, которая возвращает количество дней
 * в месяце.
 * Такие изменения затронули функцию оператора вывода, сравнения и сокращение
 * функции is_date.
 * */

#include "Chrono.h"

int main() {
    try {
        Chrono::Date dt{1971, Chrono::Month::jan, 15};
        std::cout << dt.get_zero_days() << std::endl;

        return 0;
    } catch (std::runtime_error &e) {
        std::cerr << e.what() << std::endl;
        return 1;
    } catch (Chrono::Date::Invalid &e) {
        std::cerr << e.what() << std::endl;
        return 2;
    } catch (...) {
        std::cerr << "Unknown error" << std::endl;
        return 3;
    }
}