/*
 * Описание задачи:
 * ================
 * Напишите программу для игры "Камень, ножницы, бумага". Если вы не знаете
 * правил этой игры, попробуйте выяснить их у друзей или помощью Google (поиск
 * информации - обычное занятие программистов). Для решения поставленной задачи
 * используйте инструкцию switch. Кроме того, машина должна давать случайные
 * ответы (т.е. выбирать камень, бумагу или ножницы на следующем ходу
 * случайным образом). Написать настоящий генератор случайных чисел прямо сейчас
 * вам будет довольно тяжело, поэтому заранее заполните вектор последовательностью
 * значений. Если встроить этот вектор в программу, то она всегда будет играть
 * одну и ту же игру, поэтому целесообразно позволить пользователю самому вводить
 * некоторые значения. Попробуйте помешать пользователю легко угадывать
 * следующий ход машины.
 *
 * Идея реализации:
 * ================
 * Для хранения ответов компьютера будет использоваться вектор в который
 * пользователь будет вводить значения (камень (r) - rock, ножницы (s) - scissors,
 * бумага (p) - paper). Все значения хранятся в типе char.
 *
 * Чтобы пользователь не играл одну и ту же игру, т.е. чтобы вектор значений был
 * не статичен, произведено перемешивание значений с помощью функции rand().
 * Цикл с количеством элементов n будет запускаться n * 10 раз. Это нужно для
 * того, чтобы значения хорошо перемешались.
 * На каждом шаге цикла создаются 2 случайных числа (не выходящие за границы
 * вектора) и значения на соответствующих позициях меняются местами.
 *
 * Сама игра происходит следующим образом: цикл проходит один раз по значениям
 * вектора. Пользователь вводит символ и этот символ проверяется, является ли
 * он p, r или s. Если нет, то запускается инструкция continue и пользователь
 * снова вводит значение.
 * Если всё корректно, то выполняется switch. Сначала проверяется разница по
 * значениям вектора и введенного пользователем. Если символы одинаковые, то
 * выполняется default, если же разные, то необходимо проверить кто и какие
 * символы "ввел". Для этого используется функция check_won, которая и выводит
 * соответствующие результаты.
 * */

#include "../../std_lib_facilities.h"

string check_won(char val_one, char val_two) {
    // Исключение: случай с бумагой и ножницами необходимо рассмотреть
    // отдельно, т.к. под условие ниже они выдают неправильные результаты.
    if (val_one == 'p' && val_two == 's') return "user";
    else if (val_one == 's' && val_two == 'p') return "PC";

    // Условие подходит для камней + бумаги и ножниц + камней
    if (val_one - val_two > 0) return "user";
    // Когда ни одно из условий не подходит
    return "PC";
}

int sub_response(char val_one, char val_two) {
    return abs(val_one - val_two);
}

int main() {
    // Вектор с элементами: камень (r - rock),
    // ножницы (s - scissors) и бумага (p - paper)
    vector <char> elems;
    // Переменные для хранения случайных чисел (индексов вектора)
    // Используются для перестановки значений вектора
    int val_one, val_two;
    // Введенный ответ пользователя
    char answer_usr;

    cout << "Enter the answers for the computer \n"
            "(r - rock, s - scissors, p - paper) \n"
            "When you're done typing the pipe character |:" << endl;
    // Заполнение ответами вектор
    for (char sym; cin >> sym;) {
        if (sym == '|') break;
        if (sym == 's' || sym == 'r' || sym == 'p')
            elems.push_back(sym);
        else cout << "Invalid character" << endl;
    }

    // Перемешивание вектора с ответами
    for (int i = 0; i < elems.size() * 10; ++i) {
        // Получаем случайные позиции элементов
        val_one = rand() % elems.size();
        val_two = rand() % elems.size();
        // Перестановка элементов стандартной функцией swap
        swap(elems[val_one], elems[val_two]);
    }

    // Игра пользователя и компьютера
    for (char answer_pc : elems) {
        cout << "Enter rock (r), scissors (s) or paper (p):" << endl;
        cin >> answer_usr;

        cout << "PC entered: " << answer_pc << '\n'
             << "User entered: " << answer_usr << endl;

        // Проверка, что введены символы s, r или p
        if (answer_usr >= 'p' && answer_usr <= 's' && answer_usr != 'q') {}
        else {
            cout << "Invalid character" << endl;
            cout << endl;
            continue;
        }

        switch (sub_response(answer_pc, answer_usr)) {
            // Случаи, когда выпали разные значения
            case 'r' - 'p': case 's' - 'p': case 's' - 'r':
                cout << check_won(answer_pc, answer_usr) << " won" << endl;
                break;
            // Случаи, когда выпали одинаковые значения
            default:
                cout << "No one won" << endl;
                break;
        }
        cout << endl;
    }

    return 0;
}