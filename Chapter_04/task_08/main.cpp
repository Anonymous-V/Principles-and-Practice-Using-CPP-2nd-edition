/*
 * Описание задачи:
 * ================
 * Легенда гласит, что некий царь захотел поблагодарить изобретателя шахмат и
 * предложил ему попросить любую награду. Изобретатель положить на первую клетку
 * одно зерно риса, на вторую - два, на третью - четыре и так далее, удваивая
 * количество зерен на каждой из 64 клеток. На первый взгляд, это желание
 * выглядит вполне скромным, но на самом деле в царстве не было такого количества
 * риса! Напишите программу, вычисляющую, сколько клеток надо заполнить, чтобы
 * изобретатель получил не менее 1000 зерен риса, не менее 1 000 000 зерен риса
 * и не менее 1 000 000 000 зерен риса. Вам, разумеется, понадобится цикл и,
 * вероятно, несколько переменных типа int, для того чтобы отслеживать текущий
 * номер клетки, количество зерен в текущей клетке и количество зерен во всех
 * предыдущих клетках. Мы предлагаем на каждой итерации цикла выводить на экран
 * значеня всех этих переменных, чтобы видеть промежуточные результаты.
 *
 * Идея реализации:
 * ================
 * Пройтись циклом до одного миллиарда, вычисляя количество шагов.
 * В цикле добавить условия при которых значение достигнет тысячи,
 * миллиона и миллиарда. Т.к. до этих значений будет не хватать одного шага,
 * то дополнительно необходимо увеличить эти значения вне цикла на единицу.
 * */

#include "../../std_lib_facilities.h"

int main() {
    int one_thsd = 0, one_mln = 0, one_bn = 0;
    unsigned int val = 1;
    int step = 1;

    while (val < 1000000000) {
        if (val < 1000) one_thsd = step;
        if (val < 1000000) one_mln = step;
        if (val < 1000000000) one_bn = step;

        cout << "Step: " << step << "; value: " << val << endl;
        ++step;
        val *= 2;
    }

    ++one_thsd;
    ++one_mln;
    ++one_bn;

    cout << endl;
    cout << "One thousand: " << one_thsd << '\n'
         << "One million:  " << one_mln << '\n'
         << "One billion:  " << one_bn << endl;

    return 0;
}